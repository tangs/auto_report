///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class RecentTransactionResponseDataRecentTransactionList {
/*
{
  "transDate": "2024-09-05 11:01:47",
  "effectiveDate": "Thu Sep 05 07:00:00 ICT 2024",
  "transNameTh": "รับโอนเงิน",
  "transNameEn": "Transfer Deposit",
  "depositAmount": 1,
  "withdrawAmount": null,
  "accountPartner": "label.bank.other.account",
  "channelTh": "Internet/Mobile ต่างธนาคาร",
  "channelEn": "Internet/Mobile Across Banks",
  "origRqUid": "001_20240905_0027EC8181B7C09B79A",
  "toAccountNumber": null,
  "fromAccountNameEn": null,
  "fromAccountNameTh": null,
  "benefitAccountNameTh": "",
  "benefitAccountNameEn": "",
  "transType": "FTOB",
  "originalSourceId": "1",
  "transCode": "0900",
  "debitCreditIndicator": "CR",
  "proxyTypeCode": "A",
  "proxyId": "1901675135",
  "proxyIdMasking": null,
  "descTh": null,
  "descEn": null
} 
*/

  String? transDate;
  String? effectiveDate;
  String? transNameTh;
  String? transNameEn;
  int? depositAmount;
  String? withdrawAmount;
  String? accountPartner;
  String? channelTh;
  String? channelEn;
  String? origRqUid;
  String? toAccountNumber;
  String? fromAccountNameEn;
  String? fromAccountNameTh;
  String? benefitAccountNameTh;
  String? benefitAccountNameEn;
  String? transType;
  String? originalSourceId;
  String? transCode;
  String? debitCreditIndicator;
  String? proxyTypeCode;
  String? proxyId;
  String? proxyIdMasking;
  String? descTh;
  String? descEn;

  RecentTransactionResponseDataRecentTransactionList({
    this.transDate,
    this.effectiveDate,
    this.transNameTh,
    this.transNameEn,
    this.depositAmount,
    this.withdrawAmount,
    this.accountPartner,
    this.channelTh,
    this.channelEn,
    this.origRqUid,
    this.toAccountNumber,
    this.fromAccountNameEn,
    this.fromAccountNameTh,
    this.benefitAccountNameTh,
    this.benefitAccountNameEn,
    this.transType,
    this.originalSourceId,
    this.transCode,
    this.debitCreditIndicator,
    this.proxyTypeCode,
    this.proxyId,
    this.proxyIdMasking,
    this.descTh,
    this.descEn,
  });
  RecentTransactionResponseDataRecentTransactionList.fromJson(
      Map<String, dynamic> json) {
    transDate = json['transDate']?.toString();
    effectiveDate = json['effectiveDate']?.toString();
    transNameTh = json['transNameTh']?.toString();
    transNameEn = json['transNameEn']?.toString();
    depositAmount = json['depositAmount']?.toInt();
    withdrawAmount = json['withdrawAmount']?.toString();
    accountPartner = json['accountPartner']?.toString();
    channelTh = json['channelTh']?.toString();
    channelEn = json['channelEn']?.toString();
    origRqUid = json['origRqUid']?.toString();
    toAccountNumber = json['toAccountNumber']?.toString();
    fromAccountNameEn = json['fromAccountNameEn']?.toString();
    fromAccountNameTh = json['fromAccountNameTh']?.toString();
    benefitAccountNameTh = json['benefitAccountNameTh']?.toString();
    benefitAccountNameEn = json['benefitAccountNameEn']?.toString();
    transType = json['transType']?.toString();
    originalSourceId = json['originalSourceId']?.toString();
    transCode = json['transCode']?.toString();
    debitCreditIndicator = json['debitCreditIndicator']?.toString();
    proxyTypeCode = json['proxyTypeCode']?.toString();
    proxyId = json['proxyId']?.toString();
    proxyIdMasking = json['proxyIdMasking']?.toString();
    descTh = json['descTh']?.toString();
    descEn = json['descEn']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['transDate'] = transDate;
    data['effectiveDate'] = effectiveDate;
    data['transNameTh'] = transNameTh;
    data['transNameEn'] = transNameEn;
    data['depositAmount'] = depositAmount;
    data['withdrawAmount'] = withdrawAmount;
    data['accountPartner'] = accountPartner;
    data['channelTh'] = channelTh;
    data['channelEn'] = channelEn;
    data['origRqUid'] = origRqUid;
    data['toAccountNumber'] = toAccountNumber;
    data['fromAccountNameEn'] = fromAccountNameEn;
    data['fromAccountNameTh'] = fromAccountNameTh;
    data['benefitAccountNameTh'] = benefitAccountNameTh;
    data['benefitAccountNameEn'] = benefitAccountNameEn;
    data['transType'] = transType;
    data['originalSourceId'] = originalSourceId;
    data['transCode'] = transCode;
    data['debitCreditIndicator'] = debitCreditIndicator;
    data['proxyTypeCode'] = proxyTypeCode;
    data['proxyId'] = proxyId;
    data['proxyIdMasking'] = proxyIdMasking;
    data['descTh'] = descTh;
    data['descEn'] = descEn;
    return data;
  }
}

class RecentTransactionResponseData {
/*
{
  "rowCount": 0,
  "totalList": 6,
  "navRefKey": "2024-09-05|11:01:47|001901675135000000000123|0900|2024-09-05-11.01.48.510245",
  "recentTransactionList": [
    {
      "transDate": "2024-09-05 11:01:47",
      "effectiveDate": "Thu Sep 05 07:00:00 ICT 2024",
      "transNameTh": "รับโอนเงิน",
      "transNameEn": "Transfer Deposit",
      "depositAmount": 1,
      "withdrawAmount": null,
      "accountPartner": "label.bank.other.account",
      "channelTh": "Internet/Mobile ต่างธนาคาร",
      "channelEn": "Internet/Mobile Across Banks",
      "origRqUid": "001_20240905_0027EC8181B7C09B79A",
      "toAccountNumber": null,
      "fromAccountNameEn": null,
      "fromAccountNameTh": null,
      "benefitAccountNameTh": "",
      "benefitAccountNameEn": "",
      "transType": "FTOB",
      "originalSourceId": "1",
      "transCode": "0900",
      "debitCreditIndicator": "CR",
      "proxyTypeCode": "A",
      "proxyId": "1901675135",
      "proxyIdMasking": null,
      "descTh": null,
      "descEn": null
    }
  ]
} 
*/

  int? rowCount;
  int? totalList;
  String? navRefKey;
  List<RecentTransactionResponseDataRecentTransactionList?>?
      recentTransactionList;

  RecentTransactionResponseData({
    this.rowCount,
    this.totalList,
    this.navRefKey,
    this.recentTransactionList,
  });
  RecentTransactionResponseData.fromJson(Map<String, dynamic> json) {
    rowCount = json['rowCount']?.toInt();
    totalList = json['totalList']?.toInt();
    navRefKey = json['navRefKey']?.toString();
    if (json['recentTransactionList'] != null) {
      final v = json['recentTransactionList'];
      final arr0 = <RecentTransactionResponseDataRecentTransactionList>[];
      v.forEach((v) {
        arr0.add(
            RecentTransactionResponseDataRecentTransactionList.fromJson(v));
      });
      recentTransactionList = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['rowCount'] = rowCount;
    data['totalList'] = totalList;
    data['navRefKey'] = navRefKey;
    if (recentTransactionList != null) {
      final v = recentTransactionList;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['recentTransactionList'] = arr0;
    }
    return data;
  }
}

class RecentTransactionResponse {
/*
{
  "clientRefID": "20240905144057074709",
  "serviceRefID": "ACS20240905134057483168",
  "status": "S",
  "timestamp": "2024-09-05T13:40:57.629+07:00",
  "data": {
    "rowCount": 0,
    "totalList": 6,
    "navRefKey": "2024-09-05|11:01:47|001901675135000000000123|0900|2024-09-05-11.01.48.510245",
    "recentTransactionList": [
      {
        "transDate": "2024-09-05 11:01:47",
        "effectiveDate": "Thu Sep 05 07:00:00 ICT 2024",
        "transNameTh": "รับโอนเงิน",
        "transNameEn": "Transfer Deposit",
        "depositAmount": 1,
        "withdrawAmount": null,
        "accountPartner": "label.bank.other.account",
        "channelTh": "Internet/Mobile ต่างธนาคาร",
        "channelEn": "Internet/Mobile Across Banks",
        "origRqUid": "001_20240905_0027EC8181B7C09B79A",
        "toAccountNumber": null,
        "fromAccountNameEn": null,
        "fromAccountNameTh": null,
        "benefitAccountNameTh": "",
        "benefitAccountNameEn": "",
        "transType": "FTOB",
        "originalSourceId": "1",
        "transCode": "0900",
        "debitCreditIndicator": "CR",
        "proxyTypeCode": "A",
        "proxyId": "1901675135",
        "proxyIdMasking": null,
        "descTh": null,
        "descEn": null
      }
    ]
  }
} 
*/

  String? clientRefID;
  String? serviceRefID;
  String? status;
  String? timestamp;
  RecentTransactionResponseData? data;

  RecentTransactionResponse({
    this.clientRefID,
    this.serviceRefID,
    this.status,
    this.timestamp,
    this.data,
  });
  RecentTransactionResponse.fromJson(Map<String, dynamic> json) {
    clientRefID = json['clientRefID']?.toString();
    serviceRefID = json['serviceRefID']?.toString();
    status = json['status']?.toString();
    timestamp = json['timestamp']?.toString();
    data = (json['data'] != null)
        ? RecentTransactionResponseData.fromJson(json['data'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['clientRefID'] = clientRefID;
    data['serviceRefID'] = serviceRefID;
    data['status'] = status;
    data['timestamp'] = timestamp;
    data['data'] = this.data!.toJson();
    return data;
  }
}
