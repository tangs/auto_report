///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class LoginForSmsCodeResqonseUserInfo {
/*
{
  "idType": "01",
  "identityId": "202000000024694798",
  "fullName": "Myo Myo Oo",
  "token": "aefe9c628dbc4e6bbb0357687d7ee06e1720689968333"
} 
*/

  String? idType;
  String? identityId;
  String? fullName;
  String? token;

  LoginForSmsCodeResqonseUserInfo({
    this.idType,
    this.identityId,
    this.fullName,
    this.token,
  });
  LoginForSmsCodeResqonseUserInfo.fromJson(Map<String, dynamic> json) {
    idType = json['idType']?.toString();
    identityId = json['identityId']?.toString();
    fullName = json['fullName']?.toString();
    token = json['token']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['idType'] = idType;
    data['identityId'] = identityId;
    data['fullName'] = fullName;
    data['token'] = token;
    return data;
  }
}

class LoginForSmsCodeResqonse {
/*
{
  "kycCheckFlag": "0",
  "pinCheckFlag": "0",
  "deviceCheckFlag": "1",
  "nameCheckFlag": "0",
  "faceVerifyEnable": "0",
  "nrcVerifyEnable": "1",
  "userInfo": {
    "idType": "01",
    "identityId": "202000000024694798",
    "fullName": "Myo Myo Oo",
    "token": "aefe9c628dbc4e6bbb0357687d7ee06e1720689968333"
  },
  "needCollectData": false,
  "responseCode": "0",
  "responseDesc": "Process service request successfully.",
  "serverTimestamp": 1720689968305,
  "isReCheckFlag": "0",
  "token": "aefe9c628dbc4e6bbb0357687d7ee06e1720689968333"
} 
*/

  String? kycCheckFlag;
  String? pinCheckFlag;
  String? deviceCheckFlag;
  String? nameCheckFlag;
  String? faceVerifyEnable;
  String? nrcVerifyEnable;
  LoginForSmsCodeResqonseUserInfo? userInfo;
  bool? needCollectData;
  String? responseCode;
  String? responseDesc;
  int? serverTimestamp;
  String? isReCheckFlag;
  String? token;

  LoginForSmsCodeResqonse({
    this.kycCheckFlag,
    this.pinCheckFlag,
    this.deviceCheckFlag,
    this.nameCheckFlag,
    this.faceVerifyEnable,
    this.nrcVerifyEnable,
    this.userInfo,
    this.needCollectData,
    this.responseCode,
    this.responseDesc,
    this.serverTimestamp,
    this.isReCheckFlag,
    this.token,
  });
  LoginForSmsCodeResqonse.fromJson(Map<String, dynamic> json) {
    kycCheckFlag = json['kycCheckFlag']?.toString();
    pinCheckFlag = json['pinCheckFlag']?.toString();
    deviceCheckFlag = json['deviceCheckFlag']?.toString();
    nameCheckFlag = json['nameCheckFlag']?.toString();
    faceVerifyEnable = json['faceVerifyEnable']?.toString();
    nrcVerifyEnable = json['nrcVerifyEnable']?.toString();
    userInfo = (json['userInfo'] != null)
        ? LoginForSmsCodeResqonseUserInfo.fromJson(json['userInfo'])
        : null;
    needCollectData = json['needCollectData'];
    responseCode = json['responseCode']?.toString();
    responseDesc = json['responseDesc']?.toString();
    serverTimestamp = json['serverTimestamp']?.toInt();
    isReCheckFlag = json['isReCheckFlag']?.toString();
    token = json['token']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['kycCheckFlag'] = kycCheckFlag;
    data['pinCheckFlag'] = pinCheckFlag;
    data['deviceCheckFlag'] = deviceCheckFlag;
    data['nameCheckFlag'] = nameCheckFlag;
    data['faceVerifyEnable'] = faceVerifyEnable;
    data['nrcVerifyEnable'] = nrcVerifyEnable;
    if (userInfo != null) {
      data['userInfo'] = userInfo!.toJson();
    }
    data['needCollectData'] = needCollectData;
    data['responseCode'] = responseCode;
    data['responseDesc'] = responseDesc;
    data['serverTimestamp'] = serverTimestamp;
    data['isReCheckFlag'] = isReCheckFlag;
    data['token'] = token;
    return data;
  }
}
